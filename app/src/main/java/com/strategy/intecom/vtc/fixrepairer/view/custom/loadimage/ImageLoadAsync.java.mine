package com.strategy.intecom.vtc.fixrepairer.view.custom.loadimage;

import android.content.Context;
import android.os.AsyncTask;
import android.widget.ImageView;
import android.widget.ProgressBar;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.strategy.intecom.vtc.fixrepairer.R;
import com.strategy.intecom.vtc.fixrepairer.view.custom.loadimage.ultilLoad.BitmapTransform;

import java.io.File;

/**
 * Created by Mr. Ha on 5/26/16.
 */


public class ImageLoadAsync extends AsyncTask<String, String, String> {

    private ImageView mImageView;
    private ProgressBar mProcess;
    private Context mContext;
    private int mWidth;
    private int mHeight;

    public ImageLoadAsync(Context context, ImageView imageView, int width) {
        mImageView = imageView;
        mContext = context;
        mWidth = width;
        mHeight = width;
    }

    public ImageLoadAsync(Context context, ImageView imageView, int width, int height) {
        mImageView = imageView;
        mContext = context;
        mWidth = width;
        mHeight = height;
    }

    public ImageLoadAsync(Context context, ImageView imageView, int width, int height, final ProgressBar process) {
        mImageView = imageView;
        mProcess = process;
        mContext = context;
        mWidth = width;
        mHeight = height;
    }

        @Override
        protected void onPreExecute() {
            if (mProcess != null) {
                mProcess.setVisibility(ProgressBar.VISIBLE);
            }
            super.onPreExecute();
        }

    @Override
    protected String doInBackground(String... params) {
        if (params == null && params.length > 0)
            return "";
        return params[0].toString();
    }

    @Override
    protected void onPostExecute(String result) {
        Glide.with(mContext)
                .load(result)
//                .animate(android.R.anim.slide_in_left)
                .skipMemoryCache(true)
                .diskCacheStrategy(DiskCacheStrategy.ALL)
                .transform(new BitmapTransform(mContext, mWidth, mHeight))
                .override(mWidth, mHeight)
                .centerCrop()
                .error(R.drawable.ic_avatar_default)
//                .placeholder(android.R.drawable.bottom_bar)
                .into(mImageView);

        if (mProcess != null) {
            mProcess.setVisibility(ProgressBar.GONE);
        }
    }
}

